{"name":"Kairos","tagline":"A non date-based time calculator","body":"# Kairos\r\n\r\n[![Build Status](https://travis-ci.org/rodrigogs/kairos.svg?branch=master)](https://travis-ci.org/rodrigogs/kairos)\r\n[![Code Climate](https://codeclimate.com/github/rodrigogs/kairos/badges/gpa.svg)](https://codeclimate.com/github/rodrigogs/kairos)\r\n[![Test Coverage](https://codeclimate.com/github/rodrigogs/kairos/badges/coverage.svg)](https://codeclimate.com/github/rodrigogs/kairos/coverage)\r\n[![devDependency Status](https://david-dm.org/rodrigogs/kairos/dev-status.svg)](https://david-dm.org/rodrigogs/kairos#info=devDependencies)\r\n[![npm](https://img.shields.io/npm/dt/kairos.svg)](https://www.npmjs.com/package/kairos)\r\n[![npm version](https://badge.fury.io/js/kairos.svg)](https://badge.fury.io/js/kairos)\r\n[![Bower version](https://badge.fury.io/bo/kairos.svg)](https://badge.fury.io/bo/kairos)\r\n\r\n*Kairós(καιρός) is a greek word that means \"the right moment\". Also, in the greek mithology Kairós is the son of the personification of time itself, Chronos.*\r\n\r\nNow talking about the library, Kairos is being developed to be a non date-based time calculator. The aim is to use time expressions along with math expressions to have human time products, and also to have various representations of a time expression using the engine Gnomon(*references the first solar clock ever made*).\r\n\r\n## Install\r\n\r\n#### Node.js\r\n> npm install kairos\r\n\r\n#### Bower\r\n> bower install kairos\r\n\r\n## Usage\r\n\r\n#### Using Kairos\r\n```javascript\r\nvar time = Kairos.plus('10:10', '05:20');\r\nconsole.log(time); // 15:30\r\n\r\ntime = Kairos.minus('10:00', '05:00');\r\nconsole.log(time); // 05:00\r\n\r\ntime = Kairos.multiply('01:00', 20);\r\nconsole.log(time); // 20:00\r\n\r\ntime = Kairos.divide('03:00', 2);\r\nconsole.log(time); // 01:30\r\n\r\nvar milliseconds = Kairos.toMilliseconds('00:01');\r\nconsole.log(milliseconds); // 60000\r\n\r\nvar seconds = Kairos.toSeconds('00:01');\r\nconsole.log(seconds); // 60\r\n\r\nvar minutes = Kairos.toMinutes(time);\r\nconsole.log(minutes); // 90\r\n\r\nvar hours = Kairos.toHours('10:30');\r\nconsole.log(hours); // 10.5\r\n\r\nvar fraction = Kairos.getFraction('01:00', 2, 3);\r\nconsole.log(fraction); // 00:40\r\n\r\nvar interval = Kairos.getInterval('01:00', '03:00');\r\nconsole.log(interval); // 02:00\r\n\r\nvar compare = Kairos.compareTo('01:00', '03:00');\r\nconsole.log(compare); // -1\r\ncompare = Kairos.compareTo('03:00', '03:00');\r\nconsole.log(compare); // 0\r\ncompare = Kairos.compareTo('03:00', '01:00');\r\nconsole.log(compare); // 1\r\n\r\nvar min = Kairos.min('01:00', '05:00', '00:30');\r\nconsole.log(min); // 00:30\r\n\r\nvar max = Kairos.max('01:00', '05:00', '00:30');\r\nconsole.log(max); // 05:00\r\n```\r\n\r\n#### Using Gnomon\r\n```javascript\r\nvar time = new Kairos.Gnomon('01:10:20');\r\nconsole.log(time.getMilliseconds()); // 0\r\nconsole.log(time.getSeconds()); // 20\r\nconsole.log(time.getMinutes()); // 10\r\nconsole.log(time.getHours()); // 1\r\nconsole.log(time.toMilliseconds()); // 4220000\r\nconsole.log(time.toSeconds()); // 4220\r\nconsole.log(time.toMinutes()); // 70.333333333333\r\nconsole.log(time.toHours()); // 1.172222222222\r\n\r\ntime = time.plus(new Kairos.Gnomon('01:00'));\r\nconsole.log(time.getHours()); // 2\r\n\r\nvar compare = time.comparteTo(new Kairos.Gnomon('03:00'));\r\nconsole.log(compare); // -1\r\ncompare = time.comparteTo(new Kairos.Gnomon('02:10:20'));\r\nconsole.log(compare); // 0\r\ncompare = time.comparteTo(new Kairos.Gnomon('01:00'));\r\nconsole.log(compare); // 1\r\n```\r\n\r\n**Help and ideas are FREAKING welcome. Feel free to open issues, fork and contribute! ;)**\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}